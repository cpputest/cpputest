enable_testing()

set(CppUTestTests_src
        AllTests.cpp
        SetPluginTest.cpp
        CheatSheetTest.cpp
        SimpleStringTest.cpp
        CommandLineArgumentsTest.cpp
        TestFailureTest.cpp
        TestFailureNaNTest.cpp
        CommandLineTestRunnerTest.cpp
        CompositeTestOutput.cpp
        TestFilterTest.cpp
        TestHarness_cTest.cpp
        JUnitOutputTest.cpp
        TestHarness_cTestCFile.c
        MemoryLeakDetectorTest.cpp
        TestInstallerTest.cpp
        AllocLetTestFree.c
        MemoryLeakOperatorOverloadsTest.cpp
        TestMemoryAllocatorTest.cpp
        MemoryLeakWarningTest.cpp
        TestOutputTest.cpp
        AllocLetTestFreeTest.cpp
        TestRegistryTest.cpp
        AllocationInCFile.c
        PluginTest.cpp
        TestResultTest.cpp
        PreprocessorTest.cpp
        TestUTestMacro.cpp
        AllocationInCppFile.cpp
        UtestTest.cpp
        SimpleMutexTest.cpp
        UtestPlatformTest.cpp
)

if (MSVC)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4723")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4723")
endif (MSVC)

add_executable(CppUTestTests ${CppUTestTests_src})
target_link_libraries(CppUTestTests CppUTest)

# get all test groups
execute_process(COMMAND tests/CppUTestTests -lg OUTPUT_VARIABLE CppUTestTests_Groups)

# create separate test for each group
separate_arguments(CppUTestTests_Groups)
foreach(group ${CppUTestTests_Groups})
	message("Add test: ${group}")
	add_test(NAME CppUTest.${group} COMMAND ${EXECUTABLE_OUTPUT_PATH}/CppUTestTests -g ${group})
endforeach()

if (TESTS)
    add_subdirectory(CppUTestExt)
endif (TESTS)
